import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';

import 'src/app.dart';
import 'src/core/services/app_initialization_service.dart';
import 'src/core/services/app_lifecycle_manager.dart';

void main() async {
  // Kh·ªüi t·∫°o Flutter binding
  WidgetsFlutterBinding.ensureInitialized();
  
  // KH·ªûI T·∫†O FIREBASE TR∆Ø·ªöC TI√äN
  try {
    await Firebase.initializeApp();
    print('‚úÖ Firebase initialized');
  } catch (e) {
    print('‚ùå Error initializing Firebase: $e');
  }
  
  // Kh·ªüi t·∫°o app services
  await _initializeApp();
  
  runApp(const SocdoApp());
}

Future<void> _initializeApp() async {
  try {
    print('üöÄ ƒêang kh·ªüi t·∫°o ·ª©ng d·ª•ng...');
    
    // Kh·ªüi t·∫°o AppLifecycleManager (kh√¥ng blocking)
    final lifecycleManager = AppLifecycleManager();
    lifecycleManager.initialize();
    
    // Kh·ªüi t·∫°o token (ch·∫°y background, kh√¥ng block UI)
    final initService = AppInitializationService();
    initService.initializeApp().then((success) {
      if (success) {
        print('‚úÖ Kh·ªüi t·∫°o ·ª©ng d·ª•ng th√†nh c√¥ng');
      } else {
        print('‚ö†Ô∏è Kh·ªüi t·∫°o ·ª©ng d·ª•ng th·∫•t b·∫°i, ti·∫øp t·ª•c ch·∫°y app');
      }
    });
    
    // KH√îNG delay - v√†o Flutter splash screen NGAY L·∫¨P T·ª®C
    
  } catch (e) {
    print('‚ùå L·ªói kh·ªüi t·∫°o ·ª©ng d·ª•ng: $e');
    // V·∫´n ti·∫øp t·ª•c ch·∫°y app d√π c√≥ l·ªói
  }
}